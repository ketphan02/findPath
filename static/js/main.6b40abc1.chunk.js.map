{"version":3,"sources":["components/Square.tsx","components/GameGrid.tsx","components/Card.tsx","components/Menu.tsx","pages/FindPath.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","theme","square","backgroundColor","palette","background","default","borderRadius","shape","borderColor","borderStyle","borderWidth","margin","length","window","innerHeight","width","height","x","y","grids","turn","current","secondary","main","primary","common","black","cur","tar","obs","Square","classes","React","colorClass","setColorClass","Paper","elevation","className","onClick","root","display","flexWrap","justifyContent","paper","padding","spacing","row","flexDirection","alignItems","GameGrid","Array","from","map","i","entry","j","flexGrow","grey","A200","focusedPaper","image","color","maxWidth","maxHeight","Card","colorName","isChoosed","Grid","container","item","xs","Box","sm","Typography","variant","align","style","wrapper","title","marginTop","Menu","card","setCard","gamepad","menu","FindPath","App","maxSnack","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6b40abc1.chunk.js","sourcesContent":["import * as React from 'react';\nimport { Paper, makeStyles } from '@material-ui/core';\n\nexport interface SquareProps {\n  length: number;\n  x: number;\n  y: number;\n  grids: Array<Array<React.MutableRefObject<number | null>>>;\n  turn: -1 | 0 | 1 | 2;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  square: {\n    backgroundColor: theme.palette.background.default,\n    borderRadius: theme.shape.borderRadius,\n    borderColor: 'black',\n    borderStyle: 'solid',\n    borderWidth: '0.2px',\n    margin: ({ length }: SquareProps) => window.innerHeight / (length * 20),\n    width: ({ length }: SquareProps) => window.innerHeight / (length * 1.3),\n    height: ({ length }: SquareProps) => window.innerHeight / (length * 1.3),\n    '&:hover': {\n      backgroundColor: ({\n        x,\n        y,\n        grids,\n        turn,\n      }: SquareProps) => {\n        if (grids[x][y].current === null) {\n          if (turn === 0) return theme.palette.secondary.main;\n          if (turn === 1) return theme.palette.primary.main;\n          return theme.palette.common.black;\n        }\n        if (grids[x][y].current === 0) return theme.palette.secondary.main;\n        if (grids[x][y].current === 1) return theme.palette.primary.main;\n        return theme.palette.common.black;\n      },\n    },\n  },\n  cur: {\n    backgroundColor: theme.palette.secondary.main,\n  },\n  tar: {\n    backgroundColor: theme.palette.primary.main,\n  },\n  obs: {\n    backgroundColor: theme.palette.common.black,\n  },\n}));\n\nconst Square: React.FC<SquareProps> = ({\n  length,\n  x,\n  y,\n  grids,\n  turn,\n}: SquareProps) => {\n  const classes = useStyles({\n    length,\n    x,\n    y,\n    grids,\n    turn,\n  });\n  const [colorClass, setColorClass] = React.useState<string>('');\n\n  const onClickSquare = () => {\n    if (grids[x][y].current === null) {\n      if (turn === 0) {\n        grids[x][y].current = 0;\n        setColorClass(classes.cur);\n      } else if (turn === 1) {\n        grids[x][y].current = 1;\n        setColorClass(classes.tar);\n      } else {\n        grids[x][y].current = 2;\n        setColorClass(classes.obs);\n      }\n    }\n  };\n\n  return (\n    <Paper\n      elevation={0}\n      className={`${classes.square} ${colorClass}`}\n      onClick={onClickSquare}\n    />\n  );\n};\n\nexport default Square;\n","import * as React from 'react';\nimport { makeStyles } from '@material-ui/core';\n\nimport Square from './Square';\n\nexport interface GridProps {\n  length: number;\n  turn: -1 | 0 | 1 | 2 ;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    backgroundColor: theme.palette.background.paper,\n    padding: `${theme.spacing(1)} ${theme.spacing(3)}`,\n  },\n  row: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    alignItems: 'center',\n  },\n}));\n\nconst GameGrid = ({ length, turn }: GridProps) => {\n  const classes = useStyles();\n  const grids = Array.from({ length }, () => Array.from({ length }, () => React.useRef(null)));\n\n  return (\n    <div className={classes.root}>\n      {grids.map((row, i: number) => (\n        <div className={classes.row}>\n          {row.map((entry, j: number) => (\n            <Square\n              length={length}\n              x={i}\n              y={j}\n              grids={grids}\n              turn={turn}\n            />\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default GameGrid;\n","import * as React from 'react';\nimport {\n  Box,\n  Typography,\n  Paper,\n  Grid,\n  makeStyles,\n} from '@material-ui/core';\n\nexport interface CardProps {\n  colorName: string;\n  color: string;\n  isChoosed?: boolean;\n  onClick: () => void;\n}\n\ninterface CardStyle {\n  color: string;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    margin: theme.spacing(2),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    margin: 'auto',\n    '&:hover': {\n      backgroundColor: theme.palette.grey.A200,\n    },\n  },\n  focusedPaper: {\n    padding: theme.spacing(2),\n    margin: 'auto',\n    backgroundColor: theme.palette.grey.A200,\n  },\n  image: {\n    display: 'inline-block',\n    width: '100%',\n    height: '100%',\n    backgroundColor: ({ color }: CardStyle) => {\n      if (color === 'red') return theme.palette.secondary.main;\n      if (color === 'blue') return theme.palette.primary.main;\n      return theme.palette.common.black;\n    },\n  },\n  classes: {\n    margin: 'auto',\n    display: 'block',\n    maxWidth: '100%',\n    maxHeight: '100%',\n  },\n}));\n\nconst Card: React.FC<CardProps> = ({\n  colorName,\n  color,\n  isChoosed,\n  onClick,\n}: CardProps) => {\n  const classes = useStyles({ color });\n\n  return (\n    <div className={classes.root}>\n      <Paper\n        className={isChoosed ? classes.focusedPaper : classes.paper}\n        onClick={onClick}\n      >\n        <Grid container spacing={2}>\n          <Grid item xs={4}>\n            <Box className={classes.image} />\n          </Grid>\n          <Grid item xs={8} sm container>\n            <Typography\n              variant='body1'\n              align='center'\n              style={{ margin: 'auto' }}\n            >\n              {colorName}\n            </Typography>\n          </Grid>\n        </Grid>\n      </Paper>\n    </div>\n  );\n};\n\nexport default Card;\n","import * as React from 'react';\nimport { makeStyles, Grid, Typography } from '@material-ui/core';\n\nimport ColorCard from './Card';\n\nexport interface MenuProps {\n  card: -1 | 0 | 1 | 2 ;\n  setCard: React.Dispatch<React.SetStateAction< -1 | 0 | 1 | 2 >>;\n}\n\nconst useStyles = makeStyles(() => ({\n  wrapper: {\n    display: 'flex',\n    height: '100%',\n    flexGrow: 1,\n  },\n  title: {\n    marginTop: '1rem',\n  },\n}));\n\nconst Menu: React.FC<MenuProps> = ({ card, setCard }: MenuProps) => {\n  const classes = useStyles();\n  return (\n    <Grid container spacing={2} className={classes.wrapper}>\n      <Grid item xs={12}>\n        <Grid item xs={12}>\n          <Typography\n            variant='h3'\n            color='textPrimary'\n            align='center'\n            className={classes.title}\n          >\n            MENU\n          </Typography>\n        </Grid>\n        <Grid item xs={12}>\n          <ColorCard\n            colorName='Current position'\n            color='red'\n            isChoosed={card === 0}\n            onClick={() => setCard(0)}\n          />\n          <ColorCard\n            colorName='Target'\n            color='blue'\n            isChoosed={card === 1}\n            onClick={() => setCard(1)}\n          />\n          <ColorCard\n            colorName='Obstacles'\n            color='black'\n            isChoosed={card === 2}\n            onClick={() => setCard(2)}\n          />\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Menu;\n","import * as React from 'react';\nimport { Grid, makeStyles } from '@material-ui/core';\n\nimport GameGrid from '../components/GameGrid';\nimport Menu from '../components/Menu';\n\nconst useStyles = makeStyles((theme) => ({\n  gamepad: {\n    // backgroundColor: 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',\n    padding: theme.spacing(1),\n  },\n  menu: {\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nconst FindPath = () => {\n  const classes = useStyles();\n  const [card, setCard] = React.useState< -1 | 0 | 1 | 2 >(0);\n\n  return (\n    <Grid container sm>\n      <Grid item xs={3} className={classes.menu}>\n        <Menu card={card} setCard={setCard} />\n      </Grid>\n      <Grid item xs={9} className={classes.gamepad}>\n        <GameGrid length={20} turn={card} />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default FindPath;\n","import * as React from 'react';\nimport { SnackbarProvider } from 'notistack';\nimport FindPath from './pages/FindPath';\n\nconst App = () => (\n  <SnackbarProvider maxSnack={3}>\n    <FindPath />\n  </SnackbarProvider>\n);\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS,\n      getFID,\n      getFCP,\n      getLCP,\n      getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}